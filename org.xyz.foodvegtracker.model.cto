namespace org.xyz.foodvegtracker

asset FandV identified by batchid{
  o String name
  o String batchid
  o OWNER owner
  //o TYPE type
  o STATE state
  o DateTime expDate default="2019-01-01"
  o QUALITY quality
  o FRESSNESS freshness
}

abstract participant Node identified by nid{
  o String name
  o String nid
  o ADDRESS address
}

participant Farmer extends Node{
  o METHODOFFARMING methodoffarming
}

participant PrimaryDistributor extends Node{
}

participant QualityInspector extends Node{
}

participant SecondaryDistributor extends Node{
  o TYPEOFSELLER typeofseller
}

participant Retailer extends Node{
  o TYPEOFRETAIL typeofretail
}

enum TYPEOFSELLER
{
  o Commercial
  o Non_Commercial
}

enum OWNER{
  o FARMER
  o PRIMARYDISTRIBUTOR
  o QUALITYINSPECTOR
  o SECONDARYDISTRIBUTOR
  o RETAILER
}

enum STATE{
  o HARVESTED
  o GETTING_INSPECTED
  o FINAL_INSPECTED
  o AVAILABLE_FOR_SALE
}

enum FRESSNESS{
  o RIPE
  o READY_TO_EAT
  o STALE
}

enum QUALITY{
  o QualA
  o QualB
  o QualC
}

enum METHODOFFARMING
{
  o Organic
  o InOrganic 
}
enum TYPEOFRETAIL
{
  o Commercial
  o Non_Commercial
}
concept ADDRESS{
  o String comp_name
  o String city
  o String country optional
  o String locality optional
  o String region optional
  o String street optional
  o String postalCode optional
}

transaction farmed
{
  --> Farmer farmer
  --> FandV fandv
}

transaction req_pDistributor_to_farmer
{
  --> Farmer farmer
  --> FandV fandv
  --> PrimaryDistributor pDistributor
}
transaction apprv_req_pDistributor_to_farmer extends req_pDistributor_to_farmer
{

}

transaction send_farmer_to_pDistributor extends req_pDistributor_to_farmer
{

}
transaction send_pDistributor_to_qualityInspection 
{
  --> PrimaryDistributor pDistributor
  --> FandV fandv
  --> QualityInspector Quality_Inspector
}

transaction Inspected {
  --> FandV fandv
  --> QualityInspector Quality_Inspector
}

transaction send_qualityInspection_to_pDistributor 
{
  --> PrimaryDistributor pDistributor
  --> FandV fandv
  --> QualityInspector Quality_Inspector
}
transaction req_sDistributor_to_pDistributor
{
  --> PrimaryDistributor pDistributor
  --> FandV fandv
  --> SecondaryDistributor sDistributor
}
transaction apprv_req_sDistributor_to_pDistributor extends req_sDistributor_to_pDistributor
{

}
transaction send_pDistributor_to_sDistributor extends req_sDistributor_to_pDistributor
{

}
transaction req_retail_to_sDistributor
{
  --> FandV fandv
  --> SecondaryDistributor sDistributor
  --> Retailer retailer
}
transaction apprv_req_retail_to_sDistributor extends req_retail_to_sDistributor
{

}
transaction send_sDistributor_to_retailer extends req_retail_to_sDistributor
{

}